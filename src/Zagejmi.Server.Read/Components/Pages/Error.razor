@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<div class="w-full h-full grid place-items-center text-center">
    <div class="max-w-2xl">
        <h1 class="text-5xl font-bold text-red-500">Error.</h1>
        <h2 class="mt-2 text-xl text-red-400">An error occurred while processing your request.</h2>

        @if (ShowRequestId)
        {
            <div class="mt-6">
                <p class="text-text-muted">
                    <strong>Request ID:</strong>
                    <code class="ml-2 p-2 bg-primary-950 rounded-md text-accent-400">@RequestId</code>
                </p>
            </div>
        }

        <div class="mt-8 p-6 bg-primary-900/50 rounded-lg border border-accent-800/50 text-left">
            <h3 class="text-lg font-semibold text-text-default">Development Mode Information</h3>
            <p class="mt-2 text-text-muted">
                Swapping to the <strong>Development</strong> environment will display more detailed information about the error that occurred.
            </p>
            <p class="mt-4 text-sm text-amber-500">
                <strong>The Development environment should not be enabled for deployed applications.</strong>
                It can result in displaying sensitive information from exceptions to end users.
                For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
                and restarting the app.
            </p>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}